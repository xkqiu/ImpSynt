loc srtl_reverse_iter(loc x, loc y)
requires sllseg^(x, y) & ((~(x l= y)) & (y |-> loc next : y))
ensures ( (rsllseg^(resultloc, x) & (resultloc l= y)) & (lenseg^(resultloc, x) i= old(lenseg^(x, y))) )
	& ( (minseg^(resultloc, x) i= old(minseg^(x, y))) & (maxseg^(resultloc, x) i= old(maxseg^(x, y))) )
{
	/*
	v1 = nil;
	v2 = nil;
	v3 = x;
	while (v2 != y) {
		//inv: len(v2, x) + len(v3, y) == oldlen
			&& min(min(v2, x), min(v3, y)) == oldmin
			&& max(max(v2, x), max(v3, y)) == oldmax
			sll(v3, y) && rsll(v2, x) && max(v2, x) <= min(v3, y) && disjoint(v2, v3, y) && len(v2, y) == 0
		v1 = v2;
		v2 = v3;
		v3 = v3.next;
		v2.next = v1;
	}
	return v2;
	*/
    loop(3, 0, 5);
    return ???;
}

