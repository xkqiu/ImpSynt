#pragma option 4 3 2 1

loc srtl_insert_iter(loc x, int k)
requires sll^(x)
ensures ( sll^(resultloc) & (len^(resultloc) i= (old(len^(x)) + 1)) )
	& ( (min^(resultloc) i= ((old(k) < old(min^(x))) ? old(k) : old(min^(x)))) & (max^(resultloc) i= ((old(max^(x)) < old(k)) ? old(k) : old(max^(x)))) )
{
}

loc insertion_sort(loc x)
requires tree^(x)
ensures ( sll^(resultloc) & (len^(resultloc) i= old(len^(x))) )
	& ( (min^(resultloc) i= old(min^(x))) & (max^(resultloc) i= old(max^(x))) )
{
    /*
    if (v2 == null) return v2;
    else {
	k0 = v2.key;
	v1 = v2.next;
	v1 = insertion_sort(v1);
	v1 = srtl_insert_iter(v1, k);
	free(v2);
	return v1;
    }
    */
    if (cond(1)) {
        return ???;
    }
    else {
        statement(2);
        loc ??? := insertion_sort(???);
	loc ??? := srtl_insert_iter(???, ??);
        return ???;
    }
}

